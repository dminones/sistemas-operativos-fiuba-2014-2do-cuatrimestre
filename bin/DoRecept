#!/bin/bash
#Procesa los archivos
. Helpers
. utilidadArchivo

bankExists(){
  local NAME=$1
  local BANCOS_FILE=$MAEDIR/bancos.dat

  local LINEA=`grep "^$NAME" "$BANCOS_FILE"`

  # Devuelve 1 si $LINEA esta vacia y 0 si no
  [ -n "$LINEA" ]
}

camaraExists(){
  local NAME=$1
  local CAMARAS_FILE=$MAEDIR/camaras.dat

  local LINEA=`grep "^$NAME" "$CAMARAS_FILE"`

  # Devuelve 1 si $LINEA esta vacia y 0 si no
  [ -n "$LINEA" ]
}

tribunalExists(){
  local NAME=$1
  local TRIBUNALES_FILE=$MAEDIR/pjn.dat

  local LINEA=`grep "^$NAME" "$TRIBUNALES_FILE"`

  # Devuelve 1 si $LINEA esta vacia y 0 si no
  [ -n "$LINEA" ]
}


validDate(){
  local DATE=$1

  if [[ $DATE =~ ^[0-9]{4}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$ ]]; then
    year=${DATE:0:4}
    year=10#$year
    month=${DATE:4:2}
    month=10#$month
    day=${DATE:6:8}
    day=day#$month
  else
    return 1
  fi

  if [[ $month -gt 12 ]]; then
    return 1
  fi


  # if month is negative (<0) or greater than 12
  # then it is invalid month
  if [ $month -le 0 -o $month -gt 12 ];
  then
      return 1
  fi

  # Find out number of days in given month
  case $month in
      1) days=31;;
      2) days=28 ;;
      3) days=31 ;;
      4) days=30 ;;
      5) days=31 ;;
      6) days=30 ;;
      7) days=31 ;;
      8) days=31 ;;
      9) days=30 ;;
      10) days=31 ;;
      11) days=30 ;;
      12) days=31 ;;
      *) days=-1;;
  esac

  if [ $month -eq 2 ]; # en febrero ver si es bisiesto
  then
  	if [ $((year % 4)) -ne 0 ] ; then
  	   : #  no es bisiesto
  	elif [ $((year % 400)) -eq 0 ] ; then
  	   # es bisiesto
  	   days=29
  	elif [ $((year % 100)) -eq 0 ] ; then
  	   : # no es bisiesto
  	else
  	   # bisiesto
  	   days=29
  	fi
  fi

  # if day is negative (<0) and if day is more than
  # that months days then day is invaild
  if [ $day -le 0 -o $day -gt $days ];
  then
      return 1
  fi


  #en este punto es una fecha vÃ¡lida
  #verifico q es antes de hoy
  HOY=`date +%Y%m%d`
  echo "HOY "$HOY
  echo "FECHA A VALIDAR "$DATE
  DIFF=`expr $HOY - $DATE`
  echo $DIFF

  
  if [ $DIFF -ge 0 ] && [ $DIFF -ge 0 ]; then
    echo "VALIDA"
    return 0
  else
    echo "INVALIDA"
    return 1
  fi

  return 0
}

validFile(){
  local file=$1
  local filename=$(basename $file)

  if [[ $filename == *@* ]] ; then
    IFS="@" read camara tribunal <<< "$filename"

    # Devuelve 0 si ambos son 0
    if camaraExists $camara && tribunalExists $tribunal;then
      return 0
    fi
  fi

  if [[ $filename == [^@]*_* ]] ; then
    IFS="_" read bank date <<< "$filename"

    # Devuelve 0 si ambos son 0
    if bankExists $bank && validDate $date;then return 0; fi
  fi

  return 1
}

executeIfNeeded(){
  local command=$1
  local files=$2

  if [[ -n $(ls $files 2>/dev/null) ]]; then
    #initProcess $command
    Log $command
  fi
}

doCdossier() {
  local ACEPDIR_EXPEDIENTES=$ACEPDIR/*@*
  executeIfNeeded $CDOSSIER $ACEPDIR_EXPEDIENTES
}

doFsoldes() {
  local ACEPDIR_BANCOS=$ACEPDIR/[^@]*_*
  executeIfNeeded $FSOLDES $ACEPDIR_BANCOS
}

moveFile(){
  local LOG_DIR=$LOGDIR
  local LOG_NAME=$RECEPT_LOG_NAME
  local DUP_DIR=""
  local FILE_NAME=$(basename $1)
  local DIR_1=$NOVEDIR
  local DIR_2=$2

  mover "$LOG_DIR" "$LOG_NAME" "$DUP_DIR" "$FILE_NAME" "$DIR_1" "$DIR_2"
}

doProcessFile() {
  local file=$1

  if validFile $file; then
    Log "Mover "$file" a ACEPDIR"
    moveFile $file $ACEPDIR
  else
    Log "Mover "$file" a RECHDIR"
    moveFile $file $RECHDIR
  fi
}

doRecept(){


  NOVEDIR_FILES=$NOVEDIR/*

  SAVEIFS=$IFS
  IFS=$(echo -en "\n\b")
  for f in $NOVEDIR_FILES
  do
    doProcessFile $f
  done
  IFS=$SAVEIFS

  doFsoldes
  doCdossier
}

validDate "20140927"
#doRecept
