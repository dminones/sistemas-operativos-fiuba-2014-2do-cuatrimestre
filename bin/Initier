#!/bin/bash

. Logger
GRUPO_PATH="$HOME/grupo05"
GRUPO_CONF="$GRUPO/conf"
ARCHIVO_CONF="$GRUPO/Deployer.conf"

K_FALSE=0
K_TRUE=1

logMessage(){
	#local BINDIR=`pwd`
	#local JOB_PATH=$BINDIR/../
	#local LOG_DIR="logdir/"
	local LOG_FILE="$LOGDIR""/Initier"
	local WHERE=$1
	local CODE=$2
	local DESCRIPTION=$3
	log "$LOG_FILE" "$WHERE" "$CODE" "$DESCRIPTION"
}

ambienteEstaSeteado(){
	local SETEADO=$K_TRUE

#	GRUPO_PATH="variable"
#	GRUPO_CONF="variable"
#	ARCHIVO_CONF="variable"
#	BINDIR="variable"
#	MAEDIR="variable"
#	NOVEDIR="variable"
#	DATASIZE="variable"
#	ACEPDIR="variable"
#	REPODIR="variable"
#	RECHDIR="variable"
#	LOGDIR="variable"
#	DUPDIR="variable"

	if [ -z $GRUPO_PATH ] || [ -z $GRUPO_CONF ] || [ -z $ARCHIVO_CONF ] || [ -z $BINDIR ] || [ -z $MAEDIR ] || [ -z $NOVEDIR ] || [ -z $DATASIZE ] || [ -z $ACEPDIR ] || [ -z $REPODIR ] || [ -z $RECHDIR ] || [ -z $LOGDIR ] || [ -z $DUPDIR ];
	then
		SETEADO=$K_FALSE
	fi

	echo "$SETEADO"
}



listarContenido(){
	local FILES=`ls -B "$1"` #ignora archivos con ~
	for FILE_ITEM in $FILES;
	do
		#evitar procesar carpetas
		if [[ -f $1$FILE_ITEM ]]; then
			echo "archivo: $FILE_ITEM"
			logMessage "Initier" "info" "archivo: $FILE_ITEM"
		fi
	done
}

iniciarVariablesDeAmbiente(){
	. "../conf/Deployer.conf"
	
	local MENSAJE="TP SO7508 Segundo Cuatrimestre 2014. Tema E Copyright Â© Grupo xx"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="Directorio Configuracion: $GRUPO$CONFDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	listarContenido "$GRUPO$CONFDIR/"
	
	MENSAJE="Directorio Ejecutables: $BINDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	listarContenido "$GRUPO$BINDIR/"
	
	MENSAJE="Directorio Datos Maestros y Tablas: $MAEDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	listarContenido "$GRUPO$MAEDIR/"
	
	MENSAJE="Directorio Flujo de Novedades: $NOVEDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="Directorio Novedades Aceptadas: $ACEPDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="Directorio Pedidos e Informes de Salida: $REPODIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="Directorio Archivos Rechazados: $RECHDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="Directorio de Logs de Comandos: $LOGDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
	
	MENSAJE="SubDirectorio de Resguardo de Archivos Duplicados: $DUPDIR"
	echo "$MENSAJE"
	logMessage "Initier" "info" "$MENSAJE"
		
	local PATH_SETEADO=`echo "$PATH" | grep -c "\:$GRUPO$BINDIR"`
	echo "path seteado: $PATH_SETEADO"
	if [ $PATH_SETEADO -eq 0 ];
	then
		PATH=$PATH\:"$GRUPO$BINDIR"
		export PATH	
	fi	
	
}

checkearInstalacionCompleta(){
	local COMPLETA=$K_TRUE
	
	#variables hardcodeadas temporalmente
	local BINDIR=`pwd`
	local JOB_PATH=$BINDIR/../
	local MAEDIR="$JOB_PATH/maedir/"
	
	local ARCHIVO_BANCOS="$MAEDIR/bancos.dat"
	local ARCHIVO_BANCOS_OK=`chequearArchivo "$ARCHIVO_BANCOS"`
	
	local ARCHIVO_CAMARAS="$MAEDIR/camaras.dat"
	local ARCHIVO_CAMARAS_OK=`chequearArchivo "$ARCHIVO_CAMARAS"`

	local ARCHIVO_PJN="$MAEDIR/pjn.dat"
	local ARCHIVO_PJN_OK=`chequearArchivo "$ARCHIVO_PJN"`

	if [ $ARCHIVO_BANCOS_OK -eq $K_FALSE ] || [ $ARCHIVO_CAMARAS_OK -eq $K_FALSE ] || [ $ARCHIVO_PJN_OK -eq $K_FALSE ];
	then
		echo "$K_FALSE"
	else
		echo "$K_TRUE"
	fi
}

chequearArchivo(){
	local ARCHIVO_OK=$K_TRUE
	local EXISTE=$K_TRUE
	local PERMISO=$K_TRUE
	
	if [ ! -f $1 ];
	then
		EXISTE=$K_FALSE
		logMessage "Initier" "war" "Falta el archivo $1. Instale nuevamente"
	else
		PERMISO=`chequearPermisosArchivo "$1"`
		if [ $PERMISO -eq $K_FALSE ];
		then
			logMessage "Initier" "war" "el archivo $1 no tiene permiso de lectura"	
		fi
	fi
	
	if [ $EXISTE -eq $K_FALSE ] || [ $PERMISO -eq $K_FALSE ];
	then
		echo "$K_FALSE"
	else
		echo "$K_TRUE"
	fi
}

chequearPermisosArchivo(){
	local PERMISO_LECTURA=$K_TRUE
	if [ ! -r $1 ];
	then
		chmod +r "$1"
		logMessage "chequearPermisosArchivo" "info" "Agregado permiso de lectura al archivo: $1"
	fi
	
	if [ ! -r $1 ];
	then
		PERMISO_LECTURA=$K_FALSE
	fi
	
	echo "$PERMISO_LECTURA"
}


#arrancarRecept(){
#echo "Desea efectuar la activacion del Recept?" Si - No
#read respuesta
#if [ $respuesta = 'Si'];
#then
#	ejecutarRecept
#else 
#	log INFO "Recept no activado. Si quiere arrancarlo ejecute el comando ./Debut.sh"
#	echo "Recept no activado. Si quiere arrancarlo ejecute el comando ./Debut.sh"
#fi
#}

#ejecutarRecept(){
#./Recept.sh &
#echo "Recept corriendo. Si quiere detenerlo ejecute el comando ./Stop.sh"
#log INFO "Recept corriendo bajo el no. : <Process Id de Recept>. Si quiere detenerlo ejecute el comando ./Stop.sh"

#}


#ejecucion
AMBIENTE_SETEADO=`ambienteEstaSeteado`
if [ $AMBIENTE_SETEADO -eq $K_TRUE ];
then
	echo "Ambiente ya inicializado, si quiere reiniciar termine su sesion e ingrese nuevamente"
	logMessage "Initier" "war" "Ambiente ya inicializado, si quiere reiniciar termine su sesion e ingrese nuevamente"
	
	INSTALACION_COMPLETA=`checkearInstalacionCompleta`
	if [ $INSTALACION_COMPLETA -eq $K_TRUE ];
	then
		echo "la instalacion esta completa"
	else
		echo "faltan cosas"
		#implementar rehacer instalacion
	fi
	
else #ambiente no esta seteado
	iniciarVariablesDeAmbiente	
fi




#if[$AMBIENTE=false]
#	then
#	echo "Inicilizando ambiente"
#	inicializarVariablesDeAmbiente
#	log INFO "Inicio de Initier"
#	log INFO "Inicializando ambiente"
#	checkearInstalacion
#	if[$instalacion = "NO"]
#		then log ERR"Instalacion incompleta.Falta un archivo. Por favor, verifique e intenten nuevamente."
#		echo "Instalacion incompleta.Falta un archivo. Por favor, verifique e intenten nuevamente."	
#		else
#		darPermisos
#		arrancarRecept
#		fi
#log ERR "Ambiente ya inicializado, si quiere reiniciar, termine su sesion e ingrese nuevamente."
#echo "Ambiente ya inicializado, si quiere reiniciar, termine su sesion e ingrese nuevamente."
#fi
#log "Initier" "Informative" "Fin de Initier"
#cerrarArchivoDeLogYTerminarProceso # falta todo
